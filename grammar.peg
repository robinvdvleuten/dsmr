package dsmr

type parser Peg {
    t *Telegram
    o *OBIS
    c *COSEM
    a Attribute
}

Telegram <- 
    Header 
    EOL
    COSEM+
    Footer 
    EOF

Header <- < '/' ( !EOL . )+ > EOL { p.t.Header = text }

COSEM <- OBIS
    {
        p.c = &COSEM{OBIS: p.o}
        p.a = nil
    }
    Attribute+
    {
        p.t.COSEM = append(p.t.COSEM, p.c)
    }

Footer <- '!' < ( !EOL . )* >) EOL { p.t.Checksum = text }

OBIS <- < Number '-' Number ':' Number '.' Number '.' Number > { p.o = &OBIS{Value: text} }

Attribute <- '(' ( Measurement / Timestamp / Text )* ')' EOL?
    {
        if p.a != nil {
            p.c.Attribute = append(p.c.Attribute, p.a)
        }
    }

Measurement <- < ( Number / '.' )+ > '*'
    { 
        p.a = &Measurement{Value: text}
    }
    < ( !')' . )+ >
    {
        p.a.(*Measurement).Unit = text
    }

Text <- < ( !')' . )+ > { p.a = &Text{Value: text} }

Timestamp <- < Number ( 'S' / 'W' ) > { p.a = &Timestamp{Value: text} }

Number <- [0-9]+

EOL <- '\r\n'

EOF <- !.
